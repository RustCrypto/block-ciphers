name: aes

on:
  pull_request:
    paths:
      - "aes/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: aes

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  # Builds for no_std platforms
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.49.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - run: cargo build --release --target ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }} --features compact
      - run: cargo build --release --target ${{ matrix.target }} --features ctr
      - run: cargo build --release --target ${{ matrix.target }} --features force-soft
      - run: cargo build --release --target ${{ matrix.target }} --all-features

  # Tests for the portable software backend
  soft:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: 1.49.0 # MSRV
            deps: sudo apt update && sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: 1.49.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            rust: stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - run: ${{ matrix.deps }}
      - run: cargo check --target ${{ matrix.target }} --all-features
      - run: cargo test --release --target ${{ matrix.target }}
      - run: cargo test --release --target ${{ matrix.target }} --features compact
      - run: cargo test --release --target ${{ matrix.target }} --features ctr
      - run: cargo test --release --target ${{ matrix.target }} --features force-soft
      - run: cargo test --release --target ${{ matrix.target }} --all-features

  # Tests for the AES-NI backend
  aesni:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      RUSTDOCFLAGS: "-Ctarget-feature=+aes,+ssse3"
      RUSTFLAGS: "-Dwarnings -Ctarget-feature=+aes,+ssse3"
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: 1.49.0 # MSRV
            deps: sudo apt update && sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: 1.49.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            rust: stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - run: ${{ matrix.deps }}
      - run: cargo check --target ${{ matrix.target }} --all-features
      - run: cargo test --release --target ${{ matrix.target }}
      - run: cargo test --release --target ${{ matrix.target }} --features compact
      - run: cargo test --release --target ${{ matrix.target }} --features ctr
      - run: cargo test --release --target ${{ matrix.target }} --features force-soft
      - run: cargo test --release --target ${{ matrix.target }} --all-features

  # Cross-compiled tests
  cross:
    strategy:
      matrix:
        include:
          # ARM64
          - target: aarch64-unknown-linux-gnu
            rust: 1.49.0 # MSRV
          - target: aarch64-unknown-linux-gnu
            rust: stable

          # PPC32
          - target: powerpc-unknown-linux-gnu
            rust: 1.49.0 # MSRV
          - target: powerpc-unknown-linux-gnu
            rust: stable

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: ${{ matrix.deps }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - run: cargo install cross
      - run: cross test --release --target ${{ matrix.target }}
      - run: cross test --release --target ${{ matrix.target }} --features compact
      - run: cross test --release --target ${{ matrix.target }} --features ctr
      - run: cross test --release --target ${{ matrix.target }} --features force-soft
      - run: cross test --release --target ${{ matrix.target }} --all-features
